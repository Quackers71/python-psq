Shipping Working and Maintainable Code

* Python standard library comes with the 'unittest' module
 - unit tests
 - integration tests
 - acceptance tests

* unittest - automated & repeatable

 -* TestCase
   - Groups together related test functions
    - Basic unit of test organization in 'unittest'

 -* Fixtures
   - code run before and/or after each test function
    - tear-down / clean-up fixture

 -* Assertion
   - Specific test for conditions and behaviors
    - simple boolean checks # x.is_valid()
    - equality tests        # x == y
    - Verify proper exceptions are thrown
        raise ValueError()

 - If an Assertion fails, then a test fails.

* Test-Driven Development
 - take filename argument
 - read file
 - calculate lines and characters

# In the Terminal run :
:
Microsoft Windows [Version 6.3.9600]
(c) 2013 Microsoft Corporation. All rights reserved.

C:\Users\***\Desktop\python-psq\pspyfundamentals>python text_analyzer.py
E
======================================================================
ERROR: test_function_runs (__main__.TextAnalysisTest)
Basic smoke test: does the function run.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "text_analyzer.py", line 9, in test_function_runs
    analyze_text()
NameError: name 'analyze_text' is not defined

----------------------------------------------------------------------
Ran 1 test in 0.001s

FAILED (errors=1)


PDB (The Python DeBugger)
>>> import pdb
>>> pdb.set_trace()
--Return--
> <stdin>(1)<module>()->None
(Pdb) help

Documented commands (type help <topic>):
========================================
EOF    c          d        h         list      q        rv       undisplay
a      cl         debug    help      ll        quit     s        unt
alias  clear      disable  ignore    longlist  r        source   until
args   commands   display  interact  n         restart  step     up
b      condition  down     j         next      return   tbreak   w
break  cont       enable   jump      p         retval   u        whatis
bt     continue   exit     l         pp        run      unalias  where

Miscellaneous help topics:
==========================
exec  pdb

(Pdb)

# In the Terminal run :

$ python -m pdb palindrome.py
# PDB Commands used :
(Pdb) where
(Pdb) next
(Pdb) cont
(Pdb) list
(Pdb) return

# Ran pdb.set_trace() function
# Ran 3 tests in 0.001s

Virtual Environments
* light-weight, self-contained Python installation
* venv - with the standard library module

# In the Terminal run :
:
C:\Users\***\Desktop\python-psq>python -m venv
usage: venv [-h] [--system-site-packages] [--symlinks | --copies] [--clear]
            [--upgrade] [--without-pip] [--prompt PROMPT]
            ENV_DIR [ENV_DIR ...]
venv: error: the following arguments are required: ENV_DIR
# or
https://pypi.org/project/virtualenv/

# Create a venv5 environment
> python -m venv venv5
> venv5\Scripts\activate # for Windows
$ source venv5\Scripts\activate # for Linux
(venv5) > deactivate
>

> Setup the palindrome_env environment
> python -m venv palindrome_env
> palindrome_env\Scripts\activate
$
(palindrome_env) C:\Users\***\Desktop\python-psq\pspyfundamentals\palindrome>python setup.py install
C:\Python37\lib\distutils\dist.py:259: UserWarning: 'licence' distribution option is deprecated; use 'license'
  warnings.warn(msg)
running install
running build
running build_py
creating build
creating build\lib
copying palindrome.py -> build\lib
running install_lib
copying build\lib\palindrome.py -> C:\Users\***\Desktop\python-psq\pspyfundamentals\palindrome\pali
ndrome_env\Lib\site-packages
byte-compiling C:\Users\***\Desktop\python-psq\pspyfundamentals\palindrome\palindrome_env\Lib\site-
packages\palindrome.py to palindrome.cpython-37.pyc
running install_egg_info
Writing C:\Users\***\Desktop\python-psq\pspyfundamentals\palindrome\palindrome_env\Lib\site-package
s\palindrome-1.0-py3.7.egg-info

(palindrome)> cd ..
(palindrome)> python
>>> import palindrome
>>> palindrome.__file__
'C:\\Users\\***\\Desktop\\python-psq\\pspyfundamentals\\palindrome.py'
>>> ^Z
(palindrome)> cd palindrome
(palindrome)>


Packaging to a Source Distribution with 'distutils'

(palindrome)> deactivate
> python setup.py sdist --format zip
C:\Python37\lib\distutils\dist.py:259: UserWarning: 'licence' distribution option is deprecated; use 'license'
  warnings.warn(msg)
running sdist
running check
warning: check: missing required meta-data: url

warning: sdist: manifest template 'MANIFEST.in' does not exist (using default file list)

warning: sdist: standard file not found: should have one of README, README.txt, README.rst

writing manifest file 'MANIFEST'
creating palindrome-1.0
making hard links in palindrome-1.0...
hard linking palindrome.py -> palindrome-1.0
hard linking setup.py -> palindrome-1.0
creating dist
creating 'dist\palindrome-1.0.zip' and adding 'palindrome-1.0' to it
adding 'palindrome-1.0\palindrome.py'
adding 'palindrome-1.0\PKG-INFO'
adding 'palindrome-1.0\setup.py'
removing 'palindrome-1.0' (and everything under it)

> dir
02/08/2019  04:54 PM    <DIR>          dist
> cd dist
$ unzip palindrome-1.0.zip
Archive:  palindrome-1.0.zip
  inflating: palindrome-1.0/palindrome.py
  inflating: palindrome-1.0/PKG-INFO
  inflating: palindrome-1.0/setup.py
$ ll
total 4
drwxr-xr-x 1 RQarikau 1049089    0 Feb  8 16:57 palindrome-1.0/
-rw-r--r-- 1 RQarikau 1049089 1350 Feb  8 16:54 palindrome-1.0.zip

>python setup.py sdist --help-formats
C:\Python37\lib\distutils\dist.py:259: UserWarning: 'licence' distribution option is deprecated; use 'license'
  warnings.warn(msg)
List of available source distribution formats:
  --formats=bztar  bzip2'ed tar-file
  --formats=gztar  gzip'ed tar-file
  --formats=tar    uncompressed tar file
  --formats=xztar  xz'ed tar-file
  --formats=zip    ZIP file
  --formats=ztar   compressed tar file


Installing Packages * with pip

* Python >= 3.4 Includes pip (by default)
https://packaging.python.org/
# Python Package Index (PyPI) or "CheeseShop"

* The "CheeseShop" is a famous sketch by Monty Python -
  and a nickname for the "Python Package Index".
* A "wheel" of cheese - also the name of a Python
  binary package format.

https://pypi.org/
# installing "nose" with "pip"
$ python -m venv test_env
$ source test_env/Scripts/activate
(test_env)
~/Desktop/python-psq/pspyfundamentals (master)
$ python -m pip install --upgrade pip
Collecting pip
  Downloading https://files.pythonhosted.org/packages/46/dc/7fd5df840efb3e56c8b4f768793a237ec4ee59891959d6a215d63f727023/pip-19.0.1-py2.py3-none-any.whl (1.4MB)
Installing collected packages: pip
  Found existing installation: pip 10.0.1
    Uninstalling pip-10.0.1:
      Successfully uninstalled pip-10.0.1
Successfully installed pip-19.0.1
$ pip install nose
Collecting nose
  Downloading https://files.pythonhosted.org/packages/15/d8/dd071918c040f50fa1cf80da16423af51ff8ce4a0f2399b7bf8de45ac3d9/nose-1.3.7-py3-none-any.whl (154kB)
Installing collected packages: nose
Successfully installed nose-1.3.7

C:\Users\***\Desktop\python-psq\pspyfundamentals>test_env\Scripts\activate

(test_env)> python
Python 3.7.1 (v3.7.1:260ec2c36a, Oct 20 2018, 14:57:15) [MSC v.1915 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import nose
>>> nose.__file__
'C:\\Users\\***\\Desktop\\python-psq\\pspyfundamentals\\test_env\\lib\\site-packages\\nose\\__init_
_.py'
>>> ^Z

(test_env) C:\Users\***\Desktop\python-psq\pspyfundamentals>cd palindrome

(test_env) C:\Users\***\Desktop\python-psq\pspyfundamentals\palindrome>nosetests palindrome.py
...
----------------------------------------------------------------------
Ran 3 tests in 0.000s

OK

(test_env) >

* Installing from files with 'pip'
(test_env) > cd palindrome/dist
(test_env) > pip install palindrome-1.0.zip
Processing c:\users\***\desktop\python-psq\pspyfundamentals\palindrome\dist\palindrome-1.0.zip
Installing collected packages: palindrome
  Running setup.py install for palindrome ... done
Successfully installed palindrome-1.0

* Uninstalling with 'pip'
(test_env) > 